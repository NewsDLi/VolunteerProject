<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.volunteer.web.dao.CommunityArticlesMapper" >
  <resultMap id="BaseResultMap" type="com.volunteer.model.CommunityArticles" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="publication_time" property="publicationTime" jdbcType="TIMESTAMP" />
    <result column="subheading" property="subheading" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="lifecycle" property="lifecycle" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="image" property="image" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.volunteer.model.CommunityArticles" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, publication_time, subheading, author, type, lifecycle, sort, image,content
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.volunteer.model.CommunityArticlesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from community_articles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.volunteer.model.CommunityArticlesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from community_articles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from community_articles
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from community_articles
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.volunteer.model.CommunityArticlesExample" >
    delete from community_articles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.volunteer.model.CommunityArticles" >
    insert into community_articles (id, title, publication_time, 
      subheading, author, type, 
      lifecycle, sort, image, 
      content)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{publicationTime,jdbcType=TIMESTAMP}, 
      #{subheading,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{lifecycle,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{image,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.volunteer.model.CommunityArticles" >
    insert into community_articles
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="publicationTime != null" >
        publication_time,
      </if>
      <if test="subheading != null" >
        subheading,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="lifecycle != null" >
        lifecycle,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="image != null" >
        image,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="publicationTime != null" >
        #{publicationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subheading != null" >
        #{subheading,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="lifecycle != null" >
        #{lifecycle,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.volunteer.model.CommunityArticlesExample" resultType="java.lang.Integer" >
    select count(*) from community_articles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update community_articles
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.publicationTime != null" >
        publication_time = #{record.publicationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.subheading != null" >
        subheading = #{record.subheading,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.lifecycle != null" >
        lifecycle = #{record.lifecycle,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.image != null" >
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update community_articles
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      publication_time = #{record.publicationTime,jdbcType=TIMESTAMP},
      subheading = #{record.subheading,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      lifecycle = #{record.lifecycle,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      image = #{record.image,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update community_articles
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      publication_time = #{record.publicationTime,jdbcType=TIMESTAMP},
      subheading = #{record.subheading,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      lifecycle = #{record.lifecycle,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      image = #{record.image,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.volunteer.model.CommunityArticles" >
    update community_articles
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="publicationTime != null" >
        publication_time = #{publicationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subheading != null" >
        subheading = #{subheading,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="lifecycle != null" >
        lifecycle = #{lifecycle,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.volunteer.model.CommunityArticles" >
    update community_articles
    set title = #{title,jdbcType=VARCHAR},
      publication_time = #{publicationTime,jdbcType=TIMESTAMP},
      subheading = #{subheading,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      lifecycle = #{lifecycle,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      image = #{image,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.volunteer.model.CommunityArticles" >
    update community_articles
    set title = #{title,jdbcType=VARCHAR},
      publication_time = #{publicationTime,jdbcType=TIMESTAMP},
      subheading = #{subheading,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      lifecycle = #{lifecycle,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      image = #{image,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>