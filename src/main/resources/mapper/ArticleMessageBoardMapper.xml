<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.volunteer.web.dao.ArticleMessageBoardMapper" >
  <resultMap id="BaseResultMap" type="com.volunteer.model.ArticleMessageBoard" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="community_articles_id" property="communityArticlesId" jdbcType="BIGINT" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="com.volunteer.model.ArticleMessageBoardCommand" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="community_articles_id" property="communityArticlesId" jdbcType="BIGINT" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="image" property="image" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, community_articles_id, message, version, user_id, user_name, sort, pid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.volunteer.model.ArticleMessageBoardExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article_message_board
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from article_message_board
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from article_message_board
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.volunteer.model.ArticleMessageBoardExample" >
    delete from article_message_board
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.volunteer.model.ArticleMessageBoard" >
    insert into article_message_board (id, community_articles_id, message, 
      version, user_id, user_name, 
      sort, pid)
    values (#{id,jdbcType=BIGINT}, #{communityArticlesId,jdbcType=BIGINT}, #{message,jdbcType=VARCHAR}, 
      #{version,jdbcType=TIMESTAMP}, #{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.volunteer.model.ArticleMessageBoard" keyProperty="id" keyColumn="ID" useGeneratedKeys="true">
    insert into article_message_board
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="communityArticlesId != null" >
        community_articles_id,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="pid != null" >
        pid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="communityArticlesId != null" >
        #{communityArticlesId,jdbcType=BIGINT},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.volunteer.model.ArticleMessageBoardExample" resultType="java.lang.Integer" >
    select count(*) from article_message_board
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update article_message_board
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.communityArticlesId != null" >
        community_articles_id = #{record.communityArticlesId,jdbcType=BIGINT},
      </if>
      <if test="record.message != null" >
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update article_message_board
    set id = #{record.id,jdbcType=BIGINT},
      community_articles_id = #{record.communityArticlesId,jdbcType=BIGINT},
      message = #{record.message,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=BIGINT},
      user_name = #{record.userName,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.volunteer.model.ArticleMessageBoard" >
    update article_message_board
    <set >
      <if test="communityArticlesId != null" >
        community_articles_id = #{communityArticlesId,jdbcType=BIGINT},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.volunteer.model.ArticleMessageBoard" >
    update article_message_board
    set community_articles_id = #{communityArticlesId,jdbcType=BIGINT},
      message = #{message,jdbcType=VARCHAR},
      version = #{version,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectArticleMessageBoardCommand" resultMap="BaseResultMap2" parameterType="java.lang.Long" >
    select
    a.id, a.community_articles_id, a.message, a.version, a.user_id, a.user_name, a.sort, a.pid, w.image
    from article_message_board a
    left join wechat_info w on a.user_id = w.id
    where a.community_articles_id = #{communityArticlesId}
    order by version desc,sort desc
  </select>
  <select id="selectArticleMessageBoardTop" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
  SELECT
  <include refid="Base_Column_List" />
  FROM
  article_message_board
  WHERE
  id = ( SELECT pid FROM article_message_board WHERE type = #{type,jdbcType=INTEGER} GROUP BY pid ORDER BY count( pid ) DESC LIMIT 1 )
  </select>
</mapper>